loadPackage "Schubert2"
B=base(10,N,Bundle=>(C,2,"c"),Bundle=>(A,1,"a"))
BR=intersectionRing(B)
V=abstractSheaf(B,Rank=>2,ChernClass=>1+c2)
P=flagBundle({1,1},V)
p=P.StructureMap
Omegap=cotangentBundle(p)
PR=intersectionRing(P)
z1=chern_1(OO_P(1))
L=abstractSheaf(P,Rank=>1,ChernClass=>1+a1+2*z1)
l1=chern_1(L)

Delta2=(L^**4**Omegap^**3)+(L^**4**Omegap^**2)+(L^**4**Omegap)+(L^**4)+(L^**6**Omegap^**5)+(L^**6**Omegap^**4)+(L^**6**Omegap^**3)+(L^**6**Omegap^**2)+(L^**6**Omegap)+(L^**6)


list1=for k from 0 to 1 list p_*(z1^k*ctop(Delta2))
newlist=for l from 0 to 1 list toString(list1#l)


R=QQ
S=R[a1,c2, Degrees=>{{1},{2}}]
I=ideal(for i from 0 to 1 list (value(newlist#i)))
reduceHilbert hilbertSeries I



